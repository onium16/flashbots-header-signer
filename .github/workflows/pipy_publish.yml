name: Publish to PyPI

on:
  release:
    types: [created]  # Trigger only when a release is created

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to ensure up-to-date content

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install build twine

      - name: Update version in setup.py from release tag
        run: |
          TAG_VERSION=${{ github.event.release.tag_name }}  # Get tag (e.g., v0.1.2)
          VERSION=${TAG_VERSION#v}  # Remove 'v' prefix (e.g., 0.1.2)
          sed -i "s/version=\"[0-9.]*\"/version=\"$VERSION\"/" setup.py
          cat setup.py | grep version  # Verify the updated version

      - name: Remove old build artifacts
        run: |
          rm -rf dist/ build/ *.egg-info  # Clean up old artifacts

      - name: Build package
        run: python -m build

      - name: Check built files
        run: ls -lh dist/  # List created files

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}  # Use PyPI API token from secrets
        run: twine upload dist/* --verbose  # Upload with verbose output