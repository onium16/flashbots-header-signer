name: Publish to PyPI

on:
  release:
    types: [created]  # Запускать только при создании релиза

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Полное извлечение истории, чтобы гарантировать актуальность

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install build twine

      - name: Remove old build artifacts
        run: |
          rm -rf dist/*
          rm -rf build/*
          rm -rf *.egg-info

      - name: Verify setup.py version
        run: |
          grep 'version="' setup.py  # Проверяем версию в setup.py

      - name: Build package
        run: python -m build

      - name: Check built files
        run: ls -lh dist/  # Проверяем, какие файлы созданы

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}  # Используем секретный токен
        run: twine upload dist/* --verbose  # Добавляем --verbose для подробных логов